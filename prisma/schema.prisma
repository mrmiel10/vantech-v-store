
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://Dqryl:cEC0oaBazsiUhln2@cluster0.blen3vl.mongodb.net/vantechStore?retryWrites=true&w=majority"
 
}

type Image {
  color String?
  colorCode String?
  image String
}
type Address {
  city String
  country String
  line1 String
  line2 String?
}
type CartProductType {
  id String
  name String
  description String?
  category String
  brand String
  selectedImg Image
  quantity Int
  price Float
}
enum Role{
  USER
  ADMIN
}
model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  kindeId   String   @unique
  email     String   @unique
  firstName String?
  lastName  String?
  picture   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
  role Role @default(USER)
  reviews Review[]
}
model Review{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  productId String @db.ObjectId
  rating Int
  comment String
  createdDate DateTime @default(now())
  product Product @relation(fields: [productId], references: [id])
  user User @relation(fields: [userId],references: [id])
}
model Order{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  amount Float
  currency String
  deliveryStatus String?
  createdDate DateTime @default(now())
  paymentIntentId String @unique
  products CartProductType []  
  address Address?
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
}


model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String?
  price Float
  brand String
  category String
  inStock Boolean
  image Image[]
  reviews Review[]
  //categoryId Int 
  //category Category @relation(fields: [categoryId],references: [id])

}

//id String @id @default(auto()) @map("_id") @db.ObjectId
//userId String @db.ObjectId
//roducts CartProductType[]

   // if(!boardId) return notFound()